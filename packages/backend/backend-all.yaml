services:
  nest:
    image: node:latest
    ports: 
      - 3000:3000
    volumes:
      - ./shared/prisma:/nest-app/prisma
      - ./dunger-core:/nest-app/
    working_dir: /nest-app/
    entrypoint: bash -c "yarn install && npx prisma generate && npx prisma migrate deploy && npx ts-node --transpile-only ./prisma/seeds/seed-all.ts &&  npm run b:start"
    networks:
      - dunger_backend_net
    depends_on:
      keycloak:
          condition: service_healthy


  postgres:
    image: postgres
    restart: on-failure
    ports:
      - 5432:5432
    environment:
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
        POSTGRES_DATABASE: postgres
    volumes:
        - ./postgres/:/docker-entrypoint-initdb.d/
        # - ./mounts/postgres/data:/var/lib/postgresql/data
    networks:
      - dunger_backend_net

  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-postgres@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-postgres}
    ports:
      - '5050:80'
    networks:
      - dunger_backend_net


  gpt:
    image: node:latest
    ports: 
      - 4000:3000
    volumes:
      - ./shared/prisma:/nest-app/prisma
      - ./dunger-gpt:/nest-app/
    working_dir: /nest-app/
    entrypoint: bash -c "yarn install && npm run g:start"
    networks:
      - dunger_backend_net

  keycloak:
    build: keycloak
    container_name: keycloak
    ports:
        - 8080:8080
    command: start-dev
    env_file: keycloak/.env
    networks:
      - dunger_backend_net
    healthcheck:
      test:
          [
              'CMD-SHELL',
              "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed>';exit 1;fi;"
          ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - type: bind
        source: ./keycloak/realm-export.json
        target: /opt/keycloak/data/import/realm-export.json




networks:
  dunger_backend_net:
    name: dunger_backend_net
    driver: bridge
    # external: true
